body {
    color: #0f463e;
}

/* Add transition to containers so they can push in and out. */
.page,
#menu,
.menuLink {
    -webkit-transition: all 0.2s ease-out;
    -moz-transition: all 0.2s ease-out;
    -ms-transition: all 0.2s ease-out;
    -o-transition: all 0.2s ease-out;
    transition: all 0.2s ease-out;
}

/* .page contains the content and the menu  */
.page {
    position: relative;
    padding-left: 0;
}
    .page.active .sideMenu {
        left: 350px;
        width: 350px;
    }

    .page.active .menuLink {
        left: 350px;
    }
    
/*   content   */
main {
    margin: 0 auto;
    padding: 0 2em;
    max-width: 800px;
    margin-bottom: 50px;
    line-height: 1.6em;
}

header {
     margin: 0;
     color: #333;
     text-align: center;
     padding: 2.5em 2em 0;
     border-bottom: 1px solid #eee;
 }
    header h1 {
        margin: 0.2em 0;
        font-size: 1.5em;
    	font-family: 'Arial', sans-serif;
    	color:#fdbb96;
    }
     header h2 {
        color: #0f463e;
    	font-family: 'Arial', sans-serif;
    	font-size: 1.75em;
        padding: 0;
        margin-top: 0;
    }

h3, h4 {
    color: #0f463e;
    font-family: 'Arial', sans-serif;
}



/*
The `#menu` `<div>` is the parent `<div>` that contains the `.sideMenu` that
appears on the left side of the page.
*/

#menu {
    margin-left: -150px; /* "#menu" width */
    width: 150px;
    position: fixed;
    top: 0;
    left: 0;
    bottom: 0;
    z-index: 1000; /* so the menu or its navicon stays above all content */
    background: #191818;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
}
    /*
    All anchors inside the menu should be styled like this.
    */
    #menu a {
        color: #fff;
        border: none;
        padding: 0.6em 0 0.6em 0.6em;
    }

    /*
    Remove all background/borders, since we are applying them to #menu.
    */
     #menu .sideMenu,
     #menu .sideMenu ul {
        border: none;
        background: transparent;
    }

    /*
    Add that light border to separate items into groups.
    */
    #menu .pure-menu ul,
    #menu .pure-menu .menu-item-divided {
        border-top: 1px solid #333;
    }
        /*
        Change color of the anchor links on hover/focus.
        */
        #menu .sideMenu li a:hover,
        #menu .sideMenu li a:focus {
            background: #a8d6cc;
        }

    /*
    This styles the selected menu item `<li>`.
    */
    #menu .side-menu-selected{
        background: #a8d6cc;
        width:340px;
    }
        /*
        This styles a link within a selected menu item `<li>`.
        */
        #menu .side-menu-selected a {
            color: #fff;
        }


/* -- Dynamic Button For Responsive Menu -------------------------------------*/

/*
The button to open/close the Menu is custom-made and not part of Pure. Here's
how it works:
*/

/*
`.menu-link` represents the responsive menu toggle that shows/hides on
small screens.
*/
.menuLink {
    position: fixed;
    display: block; /* show this only on small screens */
    top: 0;
    left: 0; /* "#menu width" */
    background: #000;
    background: rgba(0,0,0,0.7);
    font-size: 10px; /* change this value to increase/decrease button size */
    z-index: 10;
    width: 2em;
    height: auto;
    padding: 2.1em 1.6em;
}

    .menuLink:hover,
    .menuLink:focus {
        background: #000;
    }

    .menuLink span {
        position: relative;
        display: block;
    }

    .menuLink span,
    .menuLink span:before,
    .menuLink span:after {
        background-color: #fff;
        width: 100%;
        height: 0.2em;
    }

        .menuLink span:before,
        .menuLink span:after {
            position: absolute;
            margin-top: -0.6em;
            content: " ";
        }

        .menuLink span:after {
            margin-top: 0.6em;
        }


/* -- Responsive Styles (Media Queries) ------------------------------------- */

/*
Hides the menu at `48em`, but modify this based on your app's needs.
*/
@media (min-width: 48em) {

    header,
    main {
        padding-left: 2em;
        padding-right: 2em;
    }

    .page {
        padding-left: 150px; /* left col width "#menu" */
        left: 0;
    }
    #menu {
        left: 150px;
    }

    .menuLink {
        position: fixed;
        left: 150px;
        display: none;
    }

    .page.active .menuLink {
        left: 150px;
    }
}

@media (max-width: 48em) {
    /* Only apply this when the window is small. Otherwise, the following
    case results in extra padding on the left:
        * Make the window small.
        * Tap the menu to trigger the active state.
        * Make the window large again.
    */
    .page.active {
        position: relative;
        left: 150px;
    }
}
